{"version":3,"sources":["components/layout/SectionList.tsx","helpers/date.ts","components/history/HistoryEntry.tsx","components/history/HistoryItem.tsx","components/history/HistoryView.tsx","components/history/History.tsx","pages/HistoryPage.tsx"],"names":["SectionList","styled","ul","months","days","getEntryMonth","timestamp","date","Date","month","getMonth","year","getFullYear","getEntryDate","dayOfWeek","getDay","day","getDate","StyledHistoryEntry","div","Details","HistoryEntry","entry","setView","console","log","name","className","size","color","createdAt","completed","cursor","title","onClick","StyledItem","li","baseItemStyles","HistoryItem","quantity","StyledView","historyContent","HistoryView","categories","getUniqueCategories","items","map","item","category","cat","_id","StyledHistory","History","useState","detailsView","dispatch","useDispatch","history","useSelector","state","cart","ui","offsetRef","useRef","historyMonths","Array","from","Set","getHistoryMonths","isLoading","Loader","center","total","length","Button","disabled","current","startGetHistory","HistoryPage","isLoadingCategories","shopping","unsavedCart","useEffect","getCategories","user","startGetCart","Sidebar","ContentLayout","CartSidebar","AddItem","show","showAddItem"],"mappings":"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","file":"static/js/8.08f37f83.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst SectionList = styled.ul`\n\tdisplay: grid;\n\tgap: 2.4rem 0.8rem;\n\t@media (min-width: 36em) {\n\t\tgrid-template-columns: repeat(2, 1fr);\n\t}\n\t@media (min-width: 75em) {\n\t\tgrid-template-columns: repeat(4, 1fr);\n\t\tgap: 4rem 2rem;\n\t}\n`;\n\nexport default SectionList;\n","const months: string[] = [\n\t'January',\n\t'February',\n\t'March',\n\t'April',\n\t'May',\n\t'June',\n\t'July',\n\t'August',\n\t'September',\n\t'October',\n\t'November',\n\t'December',\n];\n\nconst days: string[] = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nexport const getEntryMonth = (timestamp: Date): string => {\n\tconst date = new Date(timestamp);\n\tconst month = months[date.getMonth()],\n\t\tyear = date.getFullYear();\n\n\treturn `${month} ${year}`;\n};\n\nexport const getEntryDate = (timestamp: Date): string => {\n\tconst date = new Date(timestamp);\n\tconst dayOfWeek = days[date.getDay()],\n\t\tday = date.getDate(),\n\t\tmonth = date.getMonth() + 1,\n\t\tyear = date.getFullYear();\n\n\treturn `${dayOfWeek} ${day}.${month}.${year}`;\n};\n\nexport const getHistoryMonths = (timestamp: Date[]) => {\n\tconst months: string[] = timestamp.map((item: Date) => getEntryMonth(item));\n\treturn [...Array.from(new Set<string>(months))];\n};\n","import { Dispatch, SetStateAction } from 'react';\nimport styled from 'styled-components';\nimport { MdChevronRight, MdEventNote } from 'react-icons/md';\nimport { IHistory } from '../../interfaces/cart.interface';\nimport { getEntryDate } from '../../helpers/date';\n\ninterface HistoryEntryProps {\n\tentry: IHistory;\n\tsetView: Dispatch<SetStateAction<IHistory>>;\n}\n\nconst StyledHistoryEntry = styled.div`\n\tbackground-color: var(--color-bg-3);\n\tborder-radius: 1.2rem;\n\tpadding: 2rem;\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\talign-items: center;\n\tjustify-content: space-between;\n\tmargin-bottom: 2.8rem;\n\tp {\n\t\tmargin: 0;\n\t\tflex: 1;\n\t\ttext-align: center;\n\t}\n\t@media (min-width: 37.5em) {\n\t\tflex-wrap: nowrap;\n\t\tp {\n\t\t\ttext-align: left;\n\t\t}\n\t}\n\t@media (min-width: 56.25em) {\n\t\tflex-wrap: wrap;\n\t\tp {\n\t\t\ttext-align: center;\n\t\t}\n\t}\n\t@media (min-width: 75em) {\n\t\tflex-wrap: nowrap;\n\t\tp {\n\t\t\ttext-align: left;\n\t\t}\n\t}\n`;\n\nconst Details = styled.div`\n\tflex-basis: 100%;\n\tmargin-top: 2rem;\n\tdisplay: grid;\n\tgrid-template-columns: repeat(2, 1fr);\n\tgap: 2rem 0;\n\talign-items: center;\n\tjustify-content: space-between;\n\t.timestamp {\n\t\tfont-size: 1.4rem;\n\t\topacity: 0.79;\n\t\tmargin-left: auto;\n\t}\n\t.chip {\n\t\tborder: 1px solid currentColor;\n\t\tborder-radius: 0.8rem;\n\t\tfont-size: 1.2rem;\n\t\tpadding: 0.6rem;\n\t\ttext-align: center;\n\t}\n\t.chip.completed {\n\t\tcolor: var(--color-secondary-alt);\n\t}\n\t.chip.cancelled {\n\t\tcolor: var(--color-danger-alt);\n\t}\n\t.icon:last-of-type {\n\t\tmargin-left: auto;\n\t}\n\t@media (min-width: 37.5em) {\n\t\tflex-basis: unset;\n\t\tgrid-template-columns: repeat(4, auto);\n\t\tmargin-top: 0;\n\t\t.timestamp {\n\t\t\tmargin: 0 2.6rem 0 1.2rem;\n\t\t}\n\t\t.chip {\n\t\t\tmargin-right: 3rem;\n\t\t}\n\t}\n\t@media (min-width: 56.25em) {\n\t\tflex-basis: 100%;\n\t\tgrid-template-columns: repeat(2, 1fr);\n\t\tmargin-top: 2rem;\n\t\t.timestamp {\n\t\t\tmargin: 0;\n\t\t\tmargin-left: auto;\n\t\t}\n\t\t.chip {\n\t\t\tmargin-right: 0;\n\t\t}\n\t}\n\t@media (min-width: 75em) {\n\t\tflex-basis: unset;\n\t\tgrid-template-columns: repeat(4, auto);\n\t\tmargin-top: 0;\n\t\t.timestamp {\n\t\t\tmargin: 0 2.6rem 0 1.2rem;\n\t\t}\n\t\t.chip {\n\t\t\tmargin-right: 3rem;\n\t\t}\n\t}\n`;\n\nfunction HistoryEntry({ entry, setView }: HistoryEntryProps) {\n\tconsole.log(entry);\n\treturn (\n\t\t<StyledHistoryEntry>\n\t\t\t<p>{entry.name}</p>\n\t\t\t<Details>\n\t\t\t\t<MdEventNote\n\t\t\t\t\tclassName=\"icon\"\n\t\t\t\t\tsize={20}\n\t\t\t\t\tcolor=\"rgba(255, 255, 255, 0.79)\"\n\t\t\t\t/>\n\t\t\t\t<span className=\"timestamp\">\n\t\t\t\t\t{getEntryDate(entry.createdAt)}\n\t\t\t\t</span>\n\t\t\t\t<span\n\t\t\t\t\tclassName={`chip ${\n\t\t\t\t\t\tentry.completed ? 'completed' : 'cancelled'\n\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t{entry.completed ? 'completed' : 'cancelled'}\n\t\t\t\t</span>\n\t\t\t\t<MdChevronRight\n\t\t\t\t\tsize={30}\n\t\t\t\t\tclassName=\"icon\"\n\t\t\t\t\tcursor=\"pointer\"\n\t\t\t\t\tcolor=\"var(--color-primary)\"\n\t\t\t\t\ttitle=\"View Details\"\n\t\t\t\t\tonClick={() => setView(entry)}\n\t\t\t\t/>\n\t\t\t</Details>\n\t\t</StyledHistoryEntry>\n\t);\n}\n\nexport default HistoryEntry;\n","import styled from 'styled-components';\nimport { baseItemStyles } from '../../styles/mixins';\n\ninterface HistoryItemProps {\n\tname: string;\n\tquantity: number;\n}\n\nconst StyledItem = styled.li`\n\t${baseItemStyles};\n\tdisplay: grid;\n\tgrid-template-columns: 1fr auto;\n\tgap: 1rem;\n\t.quantity {\n\t\tcolor: var(--color-primary);\n\t\tfont-size: 1.4rem;\n\t\tfont-weight: 700;\n\t}\n`;\n\nfunction HistoryItem({ name, quantity }: HistoryItemProps) {\n\treturn (\n\t\t<StyledItem>\n\t\t\t{name}\n\t\t\t<span className=\"quantity\">{quantity} pcs</span>\n\t\t</StyledItem>\n\t);\n}\n\nexport default HistoryItem;\n","import { Dispatch, SetStateAction } from 'react';\nimport styled from 'styled-components';\nimport { MdArrowBack, MdEventNote } from 'react-icons/md';\nimport { ICartItem, IHistory } from '../../interfaces/cart.interface';\nimport { getEntryDate } from '../../helpers/date';\nimport { getUniqueCategories } from '../../helpers/categories';\nimport { historyContent } from '../../styles/mixins';\nimport SectionList from '../layout/SectionList';\nimport HistoryItem from './HistoryItem';\n\ninterface HistoryViewProps {\n\tentry: IHistory;\n\tsetView: Dispatch<SetStateAction<IHistory>>;\n}\n\nconst StyledView = styled.div`\n\t${historyContent};\n\t.back {\n\t\tcolor: var(--color-primary);\n\t\tcursor: pointer;\n\t\tfont-size: 1.4rem;\n\t\tfont-weight: 700;\n\t\tmargin-bottom: 3rem;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\t.icon {\n\t\tmargin-right: 1rem;\n\t}\n\t.timestamp {\n\t\tfont-size: 1.4rem;\n\t\tmargin-bottom: 4rem;\n\t\topacity: 0.79;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\t.category {\n\t\tfont-size: 1.8rem;\n\t\tfont-weight: 500;\n\t\tmargin: 0 0 1.8rem;\n\t}\n\t.section {\n\t\tmargin-bottom: 4rem;\n\t}\n`;\n\nfunction HistoryView({ entry, setView }: HistoryViewProps) {\n\tconst categories = getUniqueCategories(\n\t\tentry.items.map((item: ICartItem) => item.category)\n\t);\n\n\treturn (\n\t\t<StyledView>\n\t\t\t<div\n\t\t\t\tclassName=\"back\"\n\t\t\t\tonClick={() => setView(null!)}\n\t\t\t\ttitle=\"Go back\"\n\t\t\t>\n\t\t\t\t<MdArrowBack size={24} color=\"currentColor\" className=\"icon\" />\n\t\t\t\tback\n\t\t\t</div>\n\t\t\t<h1 className=\"headline\">{entry.name}</h1>\n\t\t\t<div className=\"timestamp\">\n\t\t\t\t<MdEventNote className=\"icon\" size={24} color=\"currentColor\" />\n\t\t\t\t{getEntryDate(entry.createdAt)}\n\t\t\t</div>\n\t\t\t{categories.map((cat: string) => (\n\t\t\t\t<div key={cat} className=\"section\">\n\t\t\t\t\t<h2 className=\"category\">{cat}</h2>\n\t\t\t\t\t<SectionList>\n\t\t\t\t\t\t{entry.items.map((item: ICartItem) =>\n\t\t\t\t\t\t\titem.category === cat ? (\n\t\t\t\t\t\t\t\t<HistoryItem\n\t\t\t\t\t\t\t\t\tkey={item._id}\n\t\t\t\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t\t\t\t\tquantity={item.quantity}\n\t\t\t\t\t\t\t\t></HistoryItem>\n\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t)}\n\t\t\t\t\t</SectionList>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</StyledView>\n\t);\n}\n\nexport default HistoryView;\n","import { useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { RootState } from '../../redux/store';\nimport { IHistory } from '../../interfaces/cart.interface';\nimport { startGetHistory } from '../../redux/actions/cart';\nimport { getEntryMonth, getHistoryMonths } from '../../helpers/date';\nimport { historyContent } from '../../styles/mixins';\nimport HistoryEntry from './HistoryEntry';\nimport Button from '../ui/Button';\nimport Loader from '../ui/Loader';\nimport HistoryView from './HistoryView';\n\nconst StyledHistory = styled.div`\n\t${historyContent};\n\t.month-date {\n\t\tfont-size: 1.6rem;\n\t\tfont-weight: 500;\n\t\tmargin: 0 0 1.8rem;\n\t\topacity: 0.79;\n\t}\n`;\n\nfunction History() {\n\tconst [detailsView, setView] = useState<IHistory>(null!);\n\n\tconst dispatch = useDispatch();\n\n\tconst { history } = useSelector((state: RootState) => state.cart);\n\tconst ui = useSelector((state: RootState) => state.ui);\n\tconst offsetRef = useRef<number>(0);\n\n\tconst historyMonths = getHistoryMonths(\n\t\thistory.history.map((entry: IHistory) => entry.createdAt)\n\t);\n\n\tconst loadHistory = () => {\n\t\toffsetRef.current += 5;\n\t\tdispatch(startGetHistory(offsetRef.current));\n\t};\n\n\tif (detailsView)\n\t\treturn <HistoryView entry={detailsView} setView={setView} />;\n\n\treturn (\n\t\t<StyledHistory>\n\t\t\t<h2 className=\"headline\">Shopping history</h2>\n\t\t\t{history.isLoading ? (\n\t\t\t\t<Loader center={true} size=\"lg\" />\n\t\t\t) : (\n\t\t\t\thistoryMonths.map((item: string) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<h3 key={item} className=\"month-date\">\n\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t{history.history.map((entry: IHistory) =>\n\t\t\t\t\t\t\tgetEntryMonth(entry.createdAt) === item ? (\n\t\t\t\t\t\t\t\t<HistoryEntry\n\t\t\t\t\t\t\t\t\tkey={entry._id}\n\t\t\t\t\t\t\t\t\tentry={entry}\n\t\t\t\t\t\t\t\t\tsetView={setView}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t))\n\t\t\t)}\n\n\t\t\t{history.total > history.history.length && (\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tdisabled={ui.isLoading}\n\t\t\t\t\tonClick={loadHistory}\n\t\t\t\t>\n\t\t\t\t\t{ui.isLoading ? (\n\t\t\t\t\t\t<Loader size=\"sm\" center={true} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t'View more'\n\t\t\t\t\t)}\n\t\t\t\t</Button>\n\t\t\t)}\n\t\t</StyledHistory>\n\t);\n}\n\nexport default History;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { RootState } from '../redux/store';\nimport { getCategories } from '../redux/actions/shopping';\nimport { startGetCart, startGetHistory } from '../redux/actions/cart';\nimport Sidebar from '../components/layout/Sidebar';\nimport ContentLayout from '../components/layout/ContentLayout';\nimport History from '../components/history/History';\nimport CartSidebar from '../components/cart/CartSidebar';\nimport AddItem from '../components/shopping/AddItem';\n\nfunction HistoryPage() {\n\tconst dispatch = useDispatch();\n\n\tconst ui = useSelector((state: RootState) => state.ui);\n\n\tconst { isLoadingCategories } = useSelector(\n\t\t(state: RootState) => state.shopping\n\t);\n\n\tconst { unsavedCart, history } = useSelector(\n\t\t(state: RootState) => state.cart\n\t);\n\n\tuseEffect(() => {\n\t\tif (isLoadingCategories) {\n\t\t\tdispatch(getCategories());\n\t\t}\n\t}, [dispatch, isLoadingCategories]);\n\n\tuseEffect(() => {\n\t\tif (!unsavedCart.user) {\n\t\t\tdispatch(startGetCart());\n\t\t}\n\t}, [dispatch, unsavedCart.user]);\n\n\tuseEffect(() => {\n\t\tif (history.isLoading && history.history.length === 0) {\n\t\t\tdispatch(startGetHistory());\n\t\t}\n\t}, [dispatch, history]);\n\n\treturn (\n\t\t<>\n\t\t\t<ToastContainer />\n\t\t\t<div className=\"layout\">\n\t\t\t\t<Sidebar />\n\t\t\t\t<ContentLayout>\n\t\t\t\t\t<History />\n\t\t\t\t\t<CartSidebar />\n\t\t\t\t\t<AddItem show={ui.showAddItem} />\n\t\t\t\t</ContentLayout>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default HistoryPage;\n"],"sourceRoot":""}