{"version":3,"sources":["redux/actions/statistics.ts","components/statistics/Progress.tsx","components/statistics/Statistics.tsx","pages/StatisticsPage.tsx"],"names":["setLoading","isLoading","type","types","STATISTICS_SET_LOADING","payload","getStatistics","statistics","STATISTICS_GET","Progress","styled","div","color","colors","progress","progressAnimation","Chart","lazy","StyledStatistics","mainContent","scrollbarY","Statistics","dispatch","useDispatch","useSelector","state","total","topItems","topCategories","monthlySummary","useEffect","getState","a","user","auth","uid","url","fetchWithToken","res","json","data","success","msg","Error","toast","error","message","Loader","size","center","className","map","item","percent","Math","round","count","_id","length","cat","fallback","stats","StatisticsPage","ui","isLoadingCategories","shopping","unsavedCart","cart","getCategories","startGetCart","Sidebar","ContentLayout","CartSidebar","AddItem","show","showAddItem"],"mappings":"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","file":"static/js/12.1fd0a03d.chunk.js","sourcesContent":["import { Action, ActionCreator, AnyAction, Dispatch } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { toast } from 'react-toastify';\nimport types from '../types';\nimport { RootState } from '../store';\nimport {\n\tIStatisticsItem,\n\tIStatisticsResponse,\n} from '../../interfaces/statistics.interface';\nimport { fetchWithToken } from '../../helpers/fetch';\n\nconst setLoading = (isLoading: boolean = true) => ({\n\ttype: types.STATISTICS_SET_LOADING,\n\tpayload: isLoading,\n});\n\nexport const startGetStatistics: ActionCreator<\n\tThunkAction<Promise<Action | void>, RootState, void, AnyAction>\n> = () => {\n\treturn async (\n\t\tdispatch: Dispatch<Action>,\n\t\tgetState\n\t): Promise<Action | void> => {\n\t\tconst { uid: user } = getState().auth;\n\t\tconst url = `users/${user}/statistics`;\n\t\ttry {\n\t\t\tconst res = await fetchWithToken(url);\n\t\t\tconst data: IStatisticsResponse = await res.json();\n\t\t\tconst { success, msg, ...payload } = data;\n\t\t\tif (!success) {\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\t\t\tdispatch(getStatistics(payload));\n\t\t} catch (err) {\n\t\t\ttoast.error(err.message);\n\t\t\tdispatch(setLoading(false));\n\t\t}\n\t};\n};\n\nconst getStatistics = (statistics: {\n\ttotal: IStatisticsItem[];\n\ttopItems: IStatisticsItem[];\n\ttopCategories: IStatisticsItem[];\n\tmonthlySummary: IStatisticsItem[];\n}) => ({\n\ttype: types.STATISTICS_GET,\n\tpayload: statistics,\n});\n","import styled from 'styled-components';\nimport { colors } from '../../styles/theme';\nimport { progressAnimation } from '../../styles/animations';\n\ninterface ProgressProps {\n\tprogress: number;\n\tcolor: 'primary' | 'secondary' | 'danger' | 'black';\n}\n\nconst Progress = styled.div<ProgressProps>`\n\tbackground-color: #e0e0e0;\n\tborder-radius: 0.4rem;\n\theight: 0.6rem;\n\twidth: 100%;\n\t&::after {\n\t\tcontent: '';\n\t\tbackground-color: ${({ color }) => colors[color]};\n\t\tborder-radius: 0.4rem;\n\t\tdisplay: block;\n\t\theight: 100%;\n\t\twidth: ${({ progress }) => `${progress}%`};\n\t\tanimation: ${progressAnimation} 0.15s ease;\n\t}\n`;\n\nexport default Progress;\n","import { Fragment, lazy, Suspense, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { IStatisticsItem } from '../../interfaces/statistics.interface';\nimport { startGetStatistics } from '../../redux/actions/statistics';\nimport { RootState } from '../../redux/store';\nimport { mainContent, scrollbarY } from '../../styles/mixins';\nimport Loader from '../ui/Loader';\nimport Progress from './Progress';\n\nconst Chart = lazy(() => import('./Chart'));\n\nconst StyledStatistics = styled.div`\n\t${mainContent};\n\t${scrollbarY};\n\tpadding-bottom: 2rem;\n\t.headline {\n\t\tfont-size: 2rem;\n\t\tfont-weight: 500;\n\t\tmargin: 0 0 3rem;\n\t}\n\t@media (min-width: 75em) {\n\t\t.headline {\n\t\t\tfont-size: 2.4rem;\n\t\t}\n\t}\n\t.grid {\n\t\tmargin-bottom: 3rem;\n\t\tdisplay: grid;\n\t\tgap: 3rem 5rem;\n\t\tp {\n\t\t\tfont-size: 1.5rem;\n\t\t\tmargin: 0 0 1.4rem;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tjustify-content: space-between;\n\t\t}\n\t}\n\t@media (min-width: 37.5em) {\n\t\t.grid {\n\t\t\tgrid-template-columns: repeat(2, 1fr);\n\t\t}\n\t}\n\t@media (min-width: 75em) {\n\t\t.grid {\n\t\t\tmargin-bottom: 3rem;\n\t\t}\n\t}\n\n\t${Progress}:not(:last-child) {\n\t\tmargin-bottom: 2.5rem;\n\t}\n`;\n\nfunction Statistics() {\n\tconst dispatch = useDispatch();\n\n\tconst { isLoading, total, topItems, topCategories, monthlySummary } =\n\t\tuseSelector((state: RootState) => state.statistics);\n\n\tuseEffect(() => {\n\t\tif (isLoading) {\n\t\t\tdispatch(startGetStatistics());\n\t\t}\n\t}, [dispatch, isLoading]);\n\n\treturn (\n\t\t<StyledStatistics>\n\t\t\t{isLoading ? (\n\t\t\t\t<Loader size=\"lg\" center={true} />\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className=\"grid\">\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<h2 className=\"headline\">Top Items</h2>\n\t\t\t\t\t\t\t{topItems.map((item: IStatisticsItem) => {\n\t\t\t\t\t\t\t\tconst percent = Math.round(\n\t\t\t\t\t\t\t\t\t(item.count / total[0].count) * 100\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Fragment key={item._id}>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t{item._id} <span>{percent}%</span>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<Progress\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tprogress={percent}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t{topItems.length === 0 && <p>No data to show</p>}\n\t\t\t\t\t\t</section>\n\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t<h2 className=\"headline\">Top Categories</h2>\n\n\t\t\t\t\t\t\t{topCategories.map((cat: IStatisticsItem) => {\n\t\t\t\t\t\t\t\tconst percent = Math.round(\n\t\t\t\t\t\t\t\t\t(cat.count / total[0].count) * 100\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Fragment key={cat._id}>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t{cat._id} <span>{percent}%</span>\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<Progress\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\tprogress={percent}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t{topCategories.length === 0 && (\n\t\t\t\t\t\t\t\t<p>No data to show</p>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</section>\n\t\t\t\t\t</div>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<h2 className=\"headline\">Monthly Summary</h2>\n\t\t\t\t\t\t<Suspense fallback={<Loader center={true} size=\"lg\" />}>\n\t\t\t\t\t\t\t<Chart stats={monthlySummary} />\n\t\t\t\t\t\t</Suspense>\n\t\t\t\t\t</section>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</StyledStatistics>\n\t);\n}\n\nexport default Statistics;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { RootState } from '../redux/store';\nimport { getCategories } from '../redux/actions/shopping';\nimport { startGetCart } from '../redux/actions/cart';\nimport Sidebar from '../components/layout/Sidebar';\nimport ContentLayout from '../components/layout/ContentLayout';\nimport Statistics from '../components/statistics/Statistics';\nimport CartSidebar from '../components/cart/CartSidebar';\nimport AddItem from '../components/shopping/AddItem';\n\nfunction StatisticsPage() {\n\tconst dispatch = useDispatch();\n\n\tconst ui = useSelector((state: RootState) => state.ui);\n\n\tconst { isLoadingCategories } = useSelector(\n\t\t(state: RootState) => state.shopping\n\t);\n\n\tconst { unsavedCart } = useSelector((state: RootState) => state.cart);\n\n\tuseEffect(() => {\n\t\tif (isLoadingCategories) {\n\t\t\tdispatch(getCategories());\n\t\t}\n\t}, [dispatch, isLoadingCategories]);\n\n\tuseEffect(() => {\n\t\tif (!unsavedCart.user) {\n\t\t\tdispatch(startGetCart());\n\t\t}\n\t}, [dispatch, unsavedCart.user]);\n\n\treturn (\n\t\t<>\n\t\t\t<ToastContainer />\n\t\t\t<div className=\"layout\">\n\t\t\t\t<Sidebar />\n\t\t\t\t<ContentLayout>\n\t\t\t\t\t<Statistics />\n\t\t\t\t\t<CartSidebar />\n\t\t\t\t\t<AddItem show={ui.showAddItem} />\n\t\t\t\t</ContentLayout>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default StatisticsPage;\n"],"sourceRoot":""}