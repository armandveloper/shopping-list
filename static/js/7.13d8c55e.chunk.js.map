{"version":3,"sources":["pages/SignupPage.tsx","components/ui/Button.tsx","components/Form/Field.tsx","components/auth/Box.tsx","components/auth/Form.tsx"],"names":["initialForm","email","password","UserSchema","Yup","shape","required","min","SignupPage","dispatch","useDispatch","isLoading","useSelector","state","ui","formik","useFormik","initialValues","validationSchema","onSubmit","values","startSignup","className","handleSubmit","autoComplete","htmlFor","value","onChange","handleChange","type","name","id","errors","touched","disabled","color","full","size","center","to","colors","primary","secondary","danger","black","Button","styled","button","attrs","props","roundedLeft","Field","div","Box","Form","form"],"mappings":"4GAAA,oHAcMA,EAAc,CACnBC,MAAO,GACPC,SAAU,IAGLC,EAAaC,MAAaC,MAAM,CACrCJ,MAAOG,MACLH,MAAM,qCACNK,SAAS,qCACXJ,SAAUE,MACRG,IAAI,EAAG,+CACPD,SAAS,0BAgEGE,UA7Df,WACC,IAAMC,EAAWC,cAETC,EAAcC,aAAY,SAACC,GAAD,OAAsBA,EAAMC,MAAtDH,UAEFI,EAASC,YAAU,CACxBC,cAAejB,EACfkB,iBAAkBf,EAClBgB,SAAU,SAACC,GACVX,EAASY,YAAYD,OAIvB,OACC,eAAC,IAAD,WACC,cAAC,IAAD,IACA,oBAAIE,UAAU,YAAd,oBACA,eAAC,IAAD,CAAMH,SAAUJ,EAAOQ,aAAcC,aAAa,MAAlD,UACC,eAAC,IAAD,WACC,uBAAOC,QAAQ,QAAf,2BACA,uBACCC,MAAOX,EAAOK,OAAOnB,MACrB0B,SAAUZ,EAAOa,aACjBC,KAAK,QACLC,KAAK,QACLC,GAAG,UAEHhB,EAAOiB,OAAO/B,OAASc,EAAOkB,QAAQhC,MACtC,qBAAKqB,UAAU,QAAf,SAAwBP,EAAOiB,OAAO/B,QACnC,QAEL,eAAC,IAAD,WACC,uBAAOwB,QAAQ,WAAf,sBACA,uBACCC,MAAOX,EAAOK,OAAOlB,SACrByB,SAAUZ,EAAOa,aACjBC,KAAK,WACLC,KAAK,WACLC,GAAG,aAEHhB,EAAOiB,OAAO9B,UAAYa,EAAOkB,QAAQ/B,SACzC,qBAAKoB,UAAU,QAAf,SAAwBP,EAAOiB,OAAO9B,WACnC,QAEL,cAAC,IAAD,CACCgC,SAAUvB,EACVkB,KAAK,SACLM,MAAM,YACNC,MAAM,EAJP,SAMEzB,EAAY,cAAC,IAAD,CAAQ0B,KAAK,KAAKC,QAAQ,IAAW,cAGpD,iEACkC,IACjC,cAAC,IAAD,CAAMC,GAAG,kBAAT,6B,oDC1EEC,EAAS,CACdC,QAAS,uBACTC,UAAW,yBACXC,OAAQ,sBACRC,MAAO,mBAGFC,EAASC,IAAOC,OAAOC,OAAM,SAACC,GAAD,MAAY,CAC9CpB,KAAMoB,EAAMpB,MAAQ,YADNiB,CAAH,yXAGS,gBAAGX,EAAH,EAAGA,MAAH,OAAgBA,EAAQK,EAAOL,GAAS,iBAE3C,qBAAGe,YACL,oBAAsB,YAE5B,kBAA0B,YAA1B,EAAGf,MAAmC,OAAS,UAG3C,kBAAwB,OAAxB,EAAGE,KAA4B,SAAW,YAI9C,qBAAGD,KAAmB,OAAS,QAO1BS,O,6CCpCTM,E,KAAQL,EAAOM,IAAV,wrBAoCID,O,6CCpCTE,E,KAAMP,EAAOM,IAAV,+QAcMC,O,6CCdTC,E,KAAOR,EAAOS,KAAV,iDAIKD","file":"static/js/7.13d8c55e.chunk.js","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { RootState } from '../redux/store';\nimport { startSignup } from '../redux/actions/auth';\nimport Box from '../components/auth/Box';\nimport Form from '../components/auth/Form';\nimport Button from '../components/ui/Button';\nimport Field from '../components/Form/Field';\nimport Loader from '../components/ui/Loader';\n\nconst initialForm = {\n\temail: '',\n\tpassword: '',\n};\n\nconst UserSchema = Yup.object().shape({\n\temail: Yup.string()\n\t\t.email('A valid email address is required')\n\t\t.required('A valid email address is required'),\n\tpassword: Yup.string()\n\t\t.min(8, 'Password must be at least 8 characters long')\n\t\t.required('Password is required'),\n});\n\nfunction SignupPage() {\n\tconst dispatch = useDispatch();\n\n\tconst { isLoading } = useSelector((state: RootState) => state.ui);\n\n\tconst formik = useFormik({\n\t\tinitialValues: initialForm,\n\t\tvalidationSchema: UserSchema,\n\t\tonSubmit: (values) => {\n\t\t\tdispatch(startSignup(values));\n\t\t},\n\t});\n\n\treturn (\n\t\t<Box>\n\t\t\t<ToastContainer />\n\t\t\t<h1 className=\"no-margin\">Signup</h1>\n\t\t\t<Form onSubmit={formik.handleSubmit} autoComplete=\"off\">\n\t\t\t\t<Field>\n\t\t\t\t\t<label htmlFor=\"email\">Email address</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tvalue={formik.values.email}\n\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t/>\n\t\t\t\t\t{formik.errors.email && formik.touched.email ? (\n\t\t\t\t\t\t<div className=\"error\">{formik.errors.email}</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</Field>\n\t\t\t\t<Field>\n\t\t\t\t\t<label htmlFor=\"password\">Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tvalue={formik.values.password}\n\t\t\t\t\t\tonChange={formik.handleChange}\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t/>\n\t\t\t\t\t{formik.errors.password && formik.touched.password ? (\n\t\t\t\t\t\t<div className=\"error\">{formik.errors.password}</div>\n\t\t\t\t\t) : null}\n\t\t\t\t</Field>\n\t\t\t\t<Button\n\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tfull={true}\n\t\t\t\t>\n\t\t\t\t\t{isLoading ? <Loader size=\"sm\" center={true} /> : 'Signup'}\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t\t<p>\n\t\t\t\tAlready have login and password?{' '}\n\t\t\t\t<Link to=\"/account/signin\">Sign in</Link>\n\t\t\t</p>\n\t\t</Box>\n\t);\n}\n\nexport default SignupPage;\n","import styled from 'styled-components';\n\ninterface ButtonProps {\n\tcolor?: 'primary' | 'secondary' | 'danger' | 'black';\n\tsize?: 'lg';\n\troundedLeft?: boolean;\n\tfull?: boolean;\n}\n\nconst colors = {\n\tprimary: 'var(--color-primary)',\n\tsecondary: 'var(--color-secondary)',\n\tdanger: 'var(--color-danger)',\n\tblack: 'var(--color-bg)',\n};\n\nconst Button = styled.button.attrs((props) => ({\n\ttype: props.type || 'button',\n}))<ButtonProps>`\n\tbackground-color: ${({ color }) => (color ? colors[color] : 'transparent')};\n\tborder: none;\n\tborder-radius: ${({ roundedLeft }) =>\n\t\troundedLeft ? '1.2rem 0 0 1.2rem' : '1.2rem'};\n\tbox-shadow: 0px 0.2rem 1.2rem rgba(0, 0, 0, 0.04);\n\tcolor: ${({ color }) => (color === 'primary' ? '#000' : '#fff')};\n\tcursor: pointer;\n\tfont-family: inherit;\n\tfont-size: ${({ size }) => (size === 'lg' ? '1.6rem' : '1.4rem')};\n\tfont-weight: 700;\n\tpadding: 1.1rem 2rem;\n\ttext-align: center;\n\twidth: ${({ full }) => (full ? '100%' : null)};\n\t&:disabled {\n\t\tcursor: not-allowed;\n\t\topacity: 0.6;\n\t}\n`;\n\nexport default Button;\n","import styled from 'styled-components';\n\nconst Field = styled.div`\n\tmargin-bottom: 3rem;\n\tlabel {\n\t\tdisplay: inline-block;\n\t\tfont-size: 1.4rem;\n\t\tmargin-bottom: 0.8rem;\n\t}\n\tinput,\n\ttextarea {\n\t\tbackground: none;\n\t\tborder: 1px solid #bdbdbd;\n\t\tborder-radius: 1.2rem;\n\t\tcolor: #fff;\n\t\tdisplay: block;\n\t\tfont-family: inherit;\n\t\tfont-size: 1.6rem;\n\t\tpadding: 2rem 1.8rem;\n\t\twidth: 100%;\n\t\ttransition: border-color 0.3s ease;\n\t}\n\tinput:focus,\n\ttextarea:focus {\n\t\tborder-color: var(--color-primary);\n\t\toutline: none;\n\t}\n\ttextarea {\n\t\theight: 11rem;\n\t\tresize: none;\n\t}\n\t.error {\n\t\tcolor: var(--color-danger-alt);\n\t\tmargin-top: 1rem;\n\t\tmargin-bottom: 0;\n\t}\n`;\n\nexport default Field;\n","import styled from 'styled-components';\n\nconst Box = styled.div`\n\tborder-radius: 1.2rem;\n\tmargin: 0 auto;\n\tmargin-top: 2rem;\n\tmax-width: 40rem;\n\tpadding: 2rem;\n\t@media (min-width: 37.5em) {\n\t\tbackground-color: var(--color-bg-3);\n\t}\n\t@media (min-width: 56.25em) {\n\t\tmargin-top: 8%;\n\t}\n`;\n\nexport default Box;\n","import styled from 'styled-components';\n\nconst Form = styled.form`\n\tmargin-top: 2rem;\n`;\n\nexport default Form;\n"],"sourceRoot":""}