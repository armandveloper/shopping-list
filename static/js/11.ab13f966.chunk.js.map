{"version":3,"sources":["helpers/date.ts","components/statistics/Chart.tsx"],"names":["months","days","getEntryMonth","timestamp","date","Date","month","getMonth","year","getFullYear","getEntryDate","dayOfWeek","getDay","day","getDate","getHistoryMonths","map","item","Array","from","Set","getMonthFromNumber","Chart","stats","console","log","start","end","data","slice","stat","name","_id","items","count","width","height","margin","top","right","bottom","left","type","dataKey","stroke","strokeDasharray","contentStyle","backgroundColor","border"],"mappings":"iQAAMA,EAAmB,CACxB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGKC,EAAiB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAErDC,EAAgB,SAACC,GAC7B,IAAMC,EAAO,IAAIC,KAAKF,GAChBG,EAAQN,EAAOI,EAAKG,YACzBC,EAAOJ,EAAKK,cAEb,MAAM,GAAN,OAAUH,EAAV,YAAmBE,IAGPE,EAAe,SAACP,GAC5B,IAAMC,EAAO,IAAIC,KAAKF,GAChBQ,EAAYV,EAAKG,EAAKQ,UAC3BC,EAAMT,EAAKU,UACXR,EAAQF,EAAKG,WAAa,EAC1BC,EAAOJ,EAAKK,cAEb,MAAM,GAAN,OAAUE,EAAV,YAAuBE,EAAvB,YAA8BP,EAA9B,YAAuCE,IAG3BO,EAAmB,SAACZ,GAChC,IAAMH,EAAmBG,EAAUa,KAAI,SAACC,GAAD,OAAgBf,EAAce,MACrE,OAAO,YAAIC,MAAMC,KAAK,IAAIC,IAAYpB,MAG1BqB,EAAqB,SAACf,GAAD,OAAmBN,EAAOM,EAAQ,K,iCCxCpE,mGAsDegB,UArCf,YAAuC,IAAtBC,EAAqB,EAArBA,MAChBC,QAAQC,IAAIF,GAEZ,IAAMjB,GAAQ,IAAID,MAAOE,WACxBmB,EAAQpB,GAAS,EAAI,EAAI,EACzBqB,EAAMrB,GAAS,EAAI,EAAI,GAElBsB,EAAOL,EAAMM,MAAMH,EAAOC,GAAKX,KAAI,SAACc,GAAD,MAA4B,CACpEC,KAAMV,YAAmBS,EAAKE,KAC9BC,MAAOH,EAAKI,UAEb,OACC,cAAC,IAAD,CAAqBC,MAAM,OAAOC,OAAQ,IAA1C,SACC,eAAC,IAAD,CACCR,KAAMA,EACNS,OAAQ,CAAEC,IAAK,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,GAF9C,UAIC,cAAC,IAAD,CACCC,KAAK,WACLC,QAAQ,QACRC,OAAO,yBAER,cAAC,IAAD,CAAeA,OAAO,OAAOC,gBAAgB,QAC7C,cAAC,IAAD,CAAOF,QAAQ,SACf,cAAC,IAAD,IACA,cAAC,IAAD,CACCG,aAAc,CACbC,gBAAiB,oBACjBC,OAAQ,UAGV,cAAC,IAAD","file":"static/js/11.ab13f966.chunk.js","sourcesContent":["const months: string[] = [\n\t'January',\n\t'February',\n\t'March',\n\t'April',\n\t'May',\n\t'June',\n\t'July',\n\t'August',\n\t'September',\n\t'October',\n\t'November',\n\t'December',\n];\n\nconst days: string[] = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\nexport const getEntryMonth = (timestamp: Date): string => {\n\tconst date = new Date(timestamp);\n\tconst month = months[date.getMonth()],\n\t\tyear = date.getFullYear();\n\n\treturn `${month} ${year}`;\n};\n\nexport const getEntryDate = (timestamp: Date): string => {\n\tconst date = new Date(timestamp);\n\tconst dayOfWeek = days[date.getDay()],\n\t\tday = date.getDate(),\n\t\tmonth = date.getMonth() + 1,\n\t\tyear = date.getFullYear();\n\n\treturn `${dayOfWeek} ${day}.${month}.${year}`;\n};\n\nexport const getHistoryMonths = (timestamp: Date[]) => {\n\tconst months: string[] = timestamp.map((item: Date) => getEntryMonth(item));\n\treturn [...Array.from(new Set<string>(months))];\n};\n\nexport const getMonthFromNumber = (month: number) => months[month - 1];\n","import {\n\tLineChart,\n\tLine,\n\tLegend,\n\tCartesianGrid,\n\tResponsiveContainer,\n\tTooltip,\n\tXAxis,\n\tYAxis,\n} from 'recharts';\nimport { getMonthFromNumber } from '../../helpers/date';\nimport { IStatisticsItem } from '../../interfaces/statistics.interface';\n\ninterface ChartProps {\n\tstats: IStatisticsItem[];\n}\n\nfunction Chart({ stats }: ChartProps) {\n\tconsole.log(stats);\n\n\tconst month = new Date().getMonth(),\n\t\tstart = month <= 5 ? 0 : 6,\n\t\tend = month <= 5 ? 6 : 12;\n\n\tconst data = stats.slice(start, end).map((stat: IStatisticsItem) => ({\n\t\tname: getMonthFromNumber(stat._id),\n\t\titems: stat.count,\n\t}));\n\treturn (\n\t\t<ResponsiveContainer width=\"100%\" height={300}>\n\t\t\t<LineChart\n\t\t\t\tdata={data}\n\t\t\t\tmargin={{ top: 0, right: 0, bottom: 0, left: 0 }}\n\t\t\t>\n\t\t\t\t<Line\n\t\t\t\t\ttype=\"monotone\"\n\t\t\t\t\tdataKey=\"items\"\n\t\t\t\t\tstroke=\"var(--color-primary)\"\n\t\t\t\t/>\n\t\t\t\t<CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" />\n\t\t\t\t<XAxis dataKey=\"name\" />\n\t\t\t\t<YAxis />\n\t\t\t\t<Tooltip\n\t\t\t\t\tcontentStyle={{\n\t\t\t\t\t\tbackgroundColor: 'var(--color-bg-3)',\n\t\t\t\t\t\tborder: 'none',\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Legend />\n\t\t\t</LineChart>\n\t\t</ResponsiveContainer>\n\t);\n}\n\nexport default Chart;\n"],"sourceRoot":""}